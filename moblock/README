
MoBlock README v0.4
http://moblock.berlios.de

.Introduction.

   MoBlock is a linux console application that blocks connections from/to hosts
   listed in a file in peerguardian format (guarding.p2p) and since version
   0.4 it supports new peerguardian 2.x files ( p2p.p2b ) and ipfilter.dat
   files.
   It uses iptables ipqueue library and it is very light in resource
   usage. I test it on an old Celeron 400 Mhz and its cpu usage has only spikes
   at 5% under normal usage (edonkey, bittorrent etc...).


.Requirements.

1) iptables and kernel support for connection and state tracking (
   ip_conntrack,ipt_state) and ip_queue kernel modules/built-in.
   This are the kernel modules i have with MoBlock running
   on 2.6.9-ac6:
	
	iptable_filter          2016  1
	ipt_state               1312  4
	ip_conntrack           37716  1 ipt_state
	ip_tables              14496  2 iptable_filter,ipt_state
	ip_queue                7608  0

2) A valid guarding.p2p/ipfilter.dat/p2p.p2b host file in /etc ( /etc/guarding.p2p ).
   MoBlock tries to skip malformed or duplicate ranges but
   if it founds something unexpected it segfaults :P
   
   Update: Thanks to Andrew de Quincey patch MoBlock now uses regular
   expressions to load guarding.p2p files so this should not be
   a problem anymore for these lists.
   In my tests i used lists from http://methlabs.org

3) Minimum iptables knowledge (or trust my start script).
   MoBlock filter only packets that are QUEUEd with iptables. So it's up
   to you to choose what traffic you want to be filtered.
   For example if you want MoBlock to filter all the new TCP connections
   that are initiated from your box:

	iptables -A OUTPUT -p tcp -m state --state NEW -j QUEUE

   A simple start script (MoBlock.sh) is provided that makes MoBlock
   filter all new incoming and outgoing connections, both for tcp and udp.
   
   !!! While MoBlock is active it is needed an explicit iptables rule to
   accept localhost-to-locahost connections:
   
   iptables -I INPUT -p tcp -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
   iptables -I INPUT -p udp -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
   
   They will be dropped with a connection reset if you don't ACCEPT them.
   I'm still investigating about this issue. 
   Provided start script has already these rules.


.Installation & Usage.

   Just untar somwhere.
   To build MoBlock from sources just do:
   
   cd src
   make
   cp MoBlock ../

   Binary version is compiled on Slackware 10.1 with gcc 3.4.3
   There is also a statically compiled version, "MoBlock.static", if you
   want to use it just rename it to "MoBlock" (deleting/renaming the
   original MoBlock).

   To start it just launch MoBlock.sh as root, for example:

   ./MoBlock.sh &

   By default it will load the block list from /etc/guarding.p2p and
   will log its activity to ./MoBlock.log, you can edit MoBlock.sh if you
   want to change them.
   For example if you want to use new p2p.pdb files change this line into
   the start script:

   ./MoBlock /etc/guarding.p2p MoBlock.log

   into this:

   ./MoBlock -n /etc/p2p.p2b MoBlock.log

   or if you want to use ipfilter.dat files:

   ./MoBlock -d /etc/ipfilter.dat MoBlock.log

   To stop it:

   kill -HUP <MoBlockPid> 
   or
   kill -TERM <MoBlockPid>

   While shutting down it will dump some stats to /var/log/MoBlock.stats
   To obtain stats about blocked ranges while it's running:

   kill -USR1 <MoBlockPid>	# write stats to logfile
   kill -USR2 <MoBlockPid>      # write stats to /var/log/MoBlock.stats


.Credits.

- Thomas Niemann (thomasn at epaperpress.com) for the red/black trees
  free implementation, used to store and search ip ranges. You can 
  find it at www.oopweb.com
- Chris Lowth, developer of FTwall (www.lowth.com/p2pwall), i 
  took some code and ideas from his FTwall
- Andrew de Quincey (adq at lidskialf dot net) for regular expressions
  and command line args patch

Last Updated: 06/03/2005
